@if (IsVisible)
{
    if (IsValid && !IsDeleting)
    {
        <div id="serverValidationsDiv" class="col-10 alert alert-success row">
            <div class="col-11" style="text-align: left">
                <span>@ChildContent har sparats</span>
            </div>
            <div class="col-1" style="text-align: right">
                <a style="text-underline-position:below; cursor: pointer" @onclick="(() => CloseServerValidations())">x</a>
            </div>
        </div>
    }

    else if (IsDeleting)
    {
        <div id="serverValidationsDiv" class="col-10 alert alert-danger row">
            <div class="col-11" style="text-align: left">
                <span>@ChildContent har tagits bort</span>
            </div>
            <div class="col-1" style="text-align: right">
                <a style="text-underline-position:below; cursor: pointer" @onclick="(() => CloseServerValidations())">x</a>
            </div>
        </div>
    }
    else
    {
        <div id="serverValidationsDiv" class="col-10 alert alert-danger row">
            <div class="col-11" style="text-align: left">
                <span>Vänligen fyll i alla fält!</span>
            </div>
            <div class="col-1" style="text-align: right">
                <a style="text-underline-position:below; cursor: pointer" @onclick="(() => CloseServerValidations())">x</a>
            </div>
        </div>
    }
}
@code {
    [Parameter]
    public bool IsVisible { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public bool IsValid { get; set; }
    [Parameter]
    public bool IsDeleting { get; set; }

    protected override Task OnParametersSetAsync()
    {
        return base.OnParametersSetAsync();
    }

    private void CloseServerValidations()
    {
        IsVisible = false;
        IsValid = false;
        IsDeleting = false;
    }
}
